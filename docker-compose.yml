services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: litrocerto_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - litrocerto
    depends_on:
      - db
      - rabbitmq
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672

  nginx:
    image: nginx:alpine
    container_name: litrocerto_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - litrocerto
    depends_on:
      - app

  db:
    image: postgis/postgis:16-3.4
    container_name: litrocerto_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-litrocerto}
      POSTGRES_USER: ${DB_USERNAME:-litrocerto}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - litrocerto

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: litrocerto_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-litrocerto}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-secret}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - litrocerto

  redis:
    image: redis:7-alpine
    container_name: litrocerto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - litrocerto

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: litrocerto_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@litrocerto.com.br}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - litrocerto
    depends_on:
      - db

  grafana:
    image: grafana/grafana:latest
    container_name: litrocerto_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      GF_SERVER_ROOT_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - litrocerto
    depends_on:
      - db
      - redis
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: litrocerto_prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - litrocerto

  loki:
    image: grafana/loki:latest
    container_name: litrocerto_loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    networks:
      - litrocerto

  promtail:
    image: grafana/promtail:latest
    container_name: litrocerto_promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./docker/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - litrocerto
    depends_on:
      - loki

  redis-insight:
    image: redis/redisinsight:latest
    container_name: litrocerto_redis_insight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - litrocerto
    depends_on:
      - redis

  mailhog:
    image: mailhog/mailhog:latest
    container_name: litrocerto_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - litrocerto

  minio:
    image: minio/minio:latest
    container_name: litrocerto_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-litrocerto}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-litrocerto123}
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    networks:
      - litrocerto

  portainer:
    image: portainer/portainer-ce:latest
    container_name: litrocerto_portainer
    restart: unless-stopped
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - litrocerto

networks:
  litrocerto:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  pgadmin_data:
  grafana_data:
  prometheus_data:
  loki_data:
  redis_insight_data:
  minio_data:
  portainer_data:
